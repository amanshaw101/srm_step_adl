#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

pair<int, int> findRange(vector<int>& nums, int target, int diff) {
    int n = nums.size();
    if (n == 0) return {-1, -1};

    int low = target - diff;
    int high = target + diff;

    auto start_it = lower_bound(nums.begin(), nums.end(), low);
    auto end_it = upper_bound(nums.begin(), nums.end(), high);

    int start = start_it - nums.begin();
    int end = end_it - nums.begin() - 1;

    if (start <= end && start < n && nums[start] >= low && nums[end] <= high)
        return {start, end};
    return {-1, -1};
}

int main() {
    int n, target, diff;
    cout << "Enter number of elements in the sorted array: ";
    cin >> n;

    vector<int> nums(n);
    cout << "Enter " << n << " sorted elements:\n";
    for (int i = 0; i < n; ++i) {
        cin >> nums[i];
    }

    cout << "Enter the target and difference: ";
    cin >> target >> diff;

    auto res = findRange(nums, target, diff);
    if (res.first == -1)
        cout << "[-1, -1]\n";
    else
        cout << "[" << res.first << ", " << res.second << "]\n";

    return 0;
}
